#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node* next;};

void Push(struct node** headRef, int data) {
	struct node* newNode = malloc(sizeof(struct node));
	newNode->data = data;
	newNode->next = *headRef;
	*headRef = newNode;
}

struct node* build(){
	struct node* head ;//=NULL;
	struct node* second ;//=NULL;
	struct node* third ;//=NULL;
	head =malloc(sizeof (struct node));
	second=malloc(sizeof (struct node));
	third=malloc(sizeof (struct node));
	head->data=5;
	head->next=second;

	second->data=1;
	second->next=third;

	third->data=3;
	third->next=NULL;
	return head;
}
struct node* addathead(){
	struct node* hea=NULL;
	int i;
	for(i=6;i>0;i--)
		Push(&hea,i);
	return (hea);
}
struct node* buildm()
{
struct node dummy;
struct node *tail=&dummy;
int i;
dummy.next=NULL;
	for(i=1;i<6;i++){
		Push(&(tail->next),i);
		tail=tail->next;
	}
return (dummy.next);
}
void disp(struct node* head){
        struct node* n=head;
        while(n!=0){
                printf("%d",n->data);
                n=n->next;
        }
//      return count;
}


int counts(struct node* head,int t){
	int count=0;
	struct node* n=head;
	while(n!=0){
		if((n->data)==t)
			count++;
		//printf("%d",n->data);
		n=n->next;
	}
	return count;
}
void srtins(struct node* head,int n)
{
struct node* h=head;
struct node* t;
while(n< (h->data) )
	t=h->next;
struct node* ali=malloc(sizeof(struct node));
ali->next = h->next;
h->next=ali;
ali->data=n;
//ali->next=t;
}
void insrt(struct node* head)
{
	struct node* h=head;
	while(h!= NULL){
		int t=h->data;
		h=h->next;
		while()
		//int x=h->data;
		//if(t>x){int temp=t;t=x;x=temp;}
	}
}



main(){
int t;
struct node* h;
h=build();
disp(h);
insrt(h);
//srtins(h,2);
disp(h);

//t=counts(h,2);
//printf("%d",t);
}
